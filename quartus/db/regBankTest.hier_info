|regBankTest
clk => clk.IN2
we3 => n_we3.IN2
A1[0] => A1[0].IN1
A1[1] => A1[1].IN1
A2[0] => A2[0].IN1
A2[1] => A2[1].IN1
A3[0] => A3[0].IN1
A3[1] => A3[1].IN1
WD3[0] => WD3[0].IN1
WD3[1] => WD3[1].IN1
WD3[2] => WD3[2].IN1
ssg[0] <= ssgDecoder:comb_10.port4
ssg[1] <= ssgDecoder:comb_10.port4
ssg[2] <= ssgDecoder:comb_10.port4
ssg[3] <= ssgDecoder:comb_10.port4
ssg[4] <= ssgDecoder:comb_10.port4
ssg[5] <= ssgDecoder:comb_10.port4
ssg[6] <= ssgDecoder:comb_10.port4
ssg[7] <= ssgDecoder:comb_10.port4
selector[0] <= ssgDecoder:comb_10.port5
selector[1] <= ssgDecoder:comb_10.port5
selector[2] <= ssgDecoder:comb_10.port5
selector[3] <= ssgDecoder:comb_10.port5
A1H[0] <= <GND>
A1H[1] <= <VCC>
A2H[0] <= <VCC>
A2H[1] <= <VCC>
A3H[0] <= <VCC>
A3H[1] <= <VCC>


|regBankTest|RegBank:banco
clk => register_array.we_a.CLK
clk => register_array.waddr_a[1].CLK
clk => register_array.waddr_a[0].CLK
clk => register_array.data_a[2].CLK
clk => register_array.data_a[1].CLK
clk => register_array.data_a[0].CLK
clk => register_array.CLK0
we3 => always0.IN1
A1[0] => Equal0.IN31
A1[0] => register_array.RADDR
A1[1] => Equal0.IN30
A1[1] => register_array.RADDR1
A2[0] => Equal1.IN31
A2[0] => register_array.PORTBRADDR
A2[1] => Equal1.IN30
A2[1] => register_array.PORTBRADDR1
A3[0] => LessThan0.IN4
A3[0] => LessThan1.IN4
A3[0] => register_array.waddr_a[0].DATAIN
A3[0] => Equal2.IN31
A3[0] => register_array.WADDR
A3[1] => LessThan0.IN3
A3[1] => LessThan1.IN3
A3[1] => register_array.waddr_a[1].DATAIN
A3[1] => Equal2.IN30
A3[1] => register_array.WADDR1
WD3[0] => register_array.data_a[0].DATAIN
WD3[0] => register_array.DATAIN
WD3[1] => register_array.data_a[1].DATAIN
WD3[1] => register_array.DATAIN1
WD3[2] => register_array.data_a[2].DATAIN
WD3[2] => register_array.DATAIN2
RD1[0] <= RD1.DB_MAX_OUTPUT_PORT_TYPE
RD1[1] <= RD1.DB_MAX_OUTPUT_PORT_TYPE
RD1[2] <= RD1.DB_MAX_OUTPUT_PORT_TYPE
RD2[0] <= RD2.DB_MAX_OUTPUT_PORT_TYPE
RD2[1] <= RD2.DB_MAX_OUTPUT_PORT_TYPE
RD2[2] <= RD2.DB_MAX_OUTPUT_PORT_TYPE


|regBankTest|ssgDecoder:comb_10
clock_50Mhz => refresh_counter[0].CLK
clock_50Mhz => refresh_counter[1].CLK
clock_50Mhz => refresh_counter[2].CLK
clock_50Mhz => refresh_counter[3].CLK
clock_50Mhz => refresh_counter[4].CLK
clock_50Mhz => refresh_counter[5].CLK
clock_50Mhz => refresh_counter[6].CLK
clock_50Mhz => refresh_counter[7].CLK
clock_50Mhz => refresh_counter[8].CLK
clock_50Mhz => refresh_counter[9].CLK
clock_50Mhz => refresh_counter[10].CLK
clock_50Mhz => refresh_counter[11].CLK
clock_50Mhz => refresh_counter[12].CLK
clock_50Mhz => refresh_counter[13].CLK
clock_50Mhz => refresh_counter[14].CLK
clock_50Mhz => refresh_counter[15].CLK
clock_50Mhz => refresh_counter[16].CLK
clock_50Mhz => refresh_counter[17].CLK
clock_50Mhz => refresh_counter[18].CLK
clock_50Mhz => refresh_counter[19].CLK
RD1[0] => Mult0.IN9
RD1[1] => Mult0.IN8
RD1[2] => Mult0.IN7
RD2[0] => Add0.IN20
RD2[1] => Add0.IN19
RD2[2] => Add0.IN18
reset => refresh_counter[0].ACLR
reset => refresh_counter[1].ACLR
reset => refresh_counter[2].ACLR
reset => refresh_counter[3].ACLR
reset => refresh_counter[4].ACLR
reset => refresh_counter[5].ACLR
reset => refresh_counter[6].ACLR
reset => refresh_counter[7].ACLR
reset => refresh_counter[8].ACLR
reset => refresh_counter[9].ACLR
reset => refresh_counter[10].ACLR
reset => refresh_counter[11].ACLR
reset => refresh_counter[12].ACLR
reset => refresh_counter[13].ACLR
reset => refresh_counter[14].ACLR
reset => refresh_counter[15].ACLR
reset => refresh_counter[16].ACLR
reset => refresh_counter[17].ACLR
reset => refresh_counter[18].ACLR
reset => refresh_counter[19].ACLR
LED_out[0] <= <VCC>
LED_out[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
LED_out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
LED_out[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
LED_out[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
LED_out[5] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
LED_out[6] <= LED_out.DB_MAX_OUTPUT_PORT_TYPE
LED_out[7] <= LED_out.DB_MAX_OUTPUT_PORT_TYPE
Anode_Activate[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
Anode_Activate[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
Anode_Activate[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
Anode_Activate[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


